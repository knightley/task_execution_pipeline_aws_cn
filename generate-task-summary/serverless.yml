service: generate-task-summary
variablesResolutionMode: 20210219
frameworkVersion: ">=1.30.0"

custom:
  dotenvVars: ${file(configs.js)}
  accountid: ${self:custom.dotenvVars.AWS_ACCOUNT_ID}
  cloud: ${self:custom.dotenvVars.TARGET_CLOUD}
  region: ${self:custom.dotenvVars.TARGET_REGION}
  logDataBucket: ${self:custom.dotenvVars.TASK_EXEC_LOG_DATA_BUCKET}
  resultDataBucket: ${self:custom.dotenvVars.TASK_EXEC_RESULT_DATA_BUCKET}
  generateTaskSummaryQueue: ${self:custom.dotenvVars.TASK_EXEC_GENERATE_TASK_SUMMARY_QUEUE}
  taskExecTaskTable: ${self:custom.dotenvVars.TASK_EXEC_TASK_TABLE}
  TaskExecIssueTable: ${self:custom.dotenvVars.TASK_EXEC_ISSUE_TABLE}

provider:
  name: aws
  region: ${self:custom.region}
  runtime: java8
  stage: ${opt:stage, 'dev'}
#environment: ${file(configs.js)}       # not working as the github example
  lambdaHashingVersion: 20201221
  endpointType: regional
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource: "arn:${self:custom.cloud}:s3:::${self:custom.logDataBucket}/*"
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:CopyObject
            - s3:PutObject
          Resource: "arn:${self:custom.cloud}:s3:::${self:custom.resultDataBucket}/*"
        - Effect: Allow
          Action:
            - sqs:ListQueues
          Resource: "arn:${self:custom.cloud}:sqs:${self:provider.region}:*:*"
        - Effect: Allow
          Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueUrl
          Resource: "arn:${self:custom.cloud}:sqs:*:*:${self:custom.generateTaskSummaryQueue}"
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:${self:custom.cloud}:dynamodb:${self:custom.region}:${self:custom.accountid}:*"

package:
  artifact: 'target/${self:service}-${self:provider.stage}.jar'

functions:
  generate-task-summary:
    handler: com.rwang5688.GenerateTaskSummaryHandler
    memorySize: 2048
    timeout: 600
    role: arn:${self:custom.cloud}:iam::${self:custom.accountid}:role/task-execution-pipeline
    environment:
      ACCOUNT_ID: ${self:custom.accountid, env:AWS_ACCOUNT_ID}
      REGION: ${self:custom.region, env:TARGET_REGION}
      LOG_DATA_BUCKET: ${self:custom.logDataBucket, env:TASK_EXEC_LOG_DATA_BUCKET}
      RESULT_DATA_BUCKET: ${self:custom.resultDataBucket, env:TASK_EXEC_RESULT_DATA_BUCKET}
      GENERATE_TASK_SUMMARY_QUEUE: ${self:custom.generateTaskSummaryQueue, env:TASK_EXEC_GENERATE_TASK_SUMMARY_QUEUE}
      TASK_TABLE: '${self:custom.taskExecTaskTable, env:TASK_EXEC_TASK_TABLE}-${self:provider.stage}'
      ISSUE_TABLE: '${self:custom.TaskExecIssueTable, env:TASK_EXEC_ISSUE_TABLE}-${self:provider.stage}'
    events:
      - sqs:
          arn: "arn:${self:custom.cloud}:sqs:${self:provider.region}:${self:custom.accountid}:${self:custom.generateTaskSummaryQueue}"

